(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return b}));var a=n(2),i=n(6),l=(n(0),n(114)),r={slug:"singleton-in-dart",title:"Singleton Pattern in Dart",tags:["dart","singleton","design-pattern"]},s={permalink:"/blog/singleton-in-dart",editUrl:"https://github.com/lohanidamodar/dlohani.com.np/edit/master/website/blog/blog/2020-10-29-singleton.md",source:"@site/blog/2020-10-29-singleton.md",description:"Introduction",date:"2020-10-29T00:00:00.000Z",tags:[{label:"dart",permalink:"/blog/tags/dart"},{label:"singleton",permalink:"/blog/tags/singleton"},{label:"design-pattern",permalink:"/blog/tags/design-pattern"}],title:"Singleton Pattern in Dart",readingTime:1.625,truncated:!0,prevItem:{title:"Appwrite \u2764\ufe0f Flutter - Tutorial Series",permalink:"/blog/appwrite-and-flutter"},nextItem:{title:"Flutter Recipes 2 - Firebase Firestore Helpers",permalink:"/blog/flutter-recipes-2-firebase-firestore-helpers"}},o=[{value:"Introduction",id:"introduction",children:[]},{value:"What is singleton?",id:"what-is-singleton",children:[]},{value:"When to use singleton?",id:"when-to-use-singleton",children:[]},{value:"Some considerations",id:"some-considerations",children:[]},{value:"Creating singleton class in dart",id:"creating-singleton-class-in-dart",children:[{value:"1. Make constructor private",id:"1-make-constructor-private",children:[]},{value:"2. Create instance variable",id:"2-create-instance-variable",children:[]},{value:"3. Static getter",id:"3-static-getter",children:[]},{value:"Final Code",id:"final-code",children:[]}]}],c={rightToc:o};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"introduction"},"Introduction"),Object(l.b)("p",null,"Singleton is a design pattern and is one of the simplest ones. It is useful in the cases when we want only a single instance of any object in our application. In this tutorial we will learn about the singleton pattern in Dart and how we can create a singletons in Dart. So let's get started"),Object(l.b)("p",null,"If you would rather watch a video"),Object(l.b)("div",{class:"player"},Object(l.b)("iframe",{src:"https://www.youtube.com/embed/f5bv8BVF1O8",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),Object(l.b)("h2",{id:"what-is-singleton"},"What is singleton?"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"One of the simplest design pattern"),Object(l.b)("li",{parentName:"ul"},"There can only be one instance of the Class"),Object(l.b)("li",{parentName:"ul"},"Class itself is responsible to keep track of its sole instance"),Object(l.b)("li",{parentName:"ul"},"The instance is globally accessible through static method"),Object(l.b)("li",{parentName:"ul"},"Constructor is private so it cannot be instantiated")),Object(l.b)("h2",{id:"when-to-use-singleton"},"When to use singleton?"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Mostly useful when multiple instantiation is costly in terms of configurations required"),Object(l.b)("li",{parentName:"ul"},"Also useful when we want to access same object over and over across our app")),Object(l.b)("h2",{id:"some-considerations"},"Some considerations"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Lazy construction"),Object(l.b)("li",{parentName:"ul"},"Singleton class shouldn\u2019t require any params"),Object(l.b)("li",{parentName:"ul"},"Should be thread safe\nDart is a single threaded language")),Object(l.b)("h2",{id:"creating-singleton-class-in-dart"},"Creating singleton class in dart"),Object(l.b)("p",null,"Create a class and then follow the steps to make it a singleton pattern."),Object(l.b)("h3",{id:"1-make-constructor-private"},"1. Make constructor private"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"Singleton._internal() {}\n")),Object(l.b)("h3",{id:"2-create-instance-variable"},"2. Create instance variable"),Object(l.b)("p",null,"Create a private static instance variable, that keeps track of the sole instance."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"static Singleton _instance;\n")),Object(l.b)("h3",{id:"3-static-getter"},"3. Static getter"),Object(l.b)("p",null,"Finally, create a static getter method, that allows access of the instance globally. It is responsible to create the new instance if it's not previously created."),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"static Singleton get instance {\n  if(_instance == null) {\n    _instance = Singleton._internal();\n  }\n  return _instance;\n}\n")),Object(l.b)("h3",{id:"final-code"},"Final Code"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),'class Singleton {\n  String name;\n  static Singleton _instance;\n  \n  Singleton._internal() {\n    \n    name="Singleton pattern";\n  }\n  \n  static Singleton get instance {\n    if(_instance == null) {\n      _instance = Singleton._internal();\n    }\n    return _instance;\n  }\n}\n')))}b.isMDXComponent=!0}}]);